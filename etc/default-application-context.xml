<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx = "http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

  <!-- Property placeholder configurer for expanding ${} into values -->
  <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
      <list>
        <value>db.properties</value>
      </list>
    </property>
  </bean>

  <bean id="dataSource" destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource">
    <property name="driverClassName" value="${db.driver}"/>
      <property name="url" value="${db.url}"/>
      <property name="username" value="${db.user}"/>
      <property name="password" value="${db.pwd}"/>
  </bean>

  <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
      <constructor-arg ref="dataSource"/>
  </bean>
 
  <!-- Enable transaction management -->
  <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <property name="dataSource" ref="dataSource"/>
  </bean>
  
  <!-- we want transactions on classes -->
  <tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/>
    
  <bean id="xmlrpcgenerator" class="eu.baltrad.beast.adaptor.xmlrpc.XmlRpcCommandGenerator"/>
  
  <bean id="xmlrpcadaptormanager" class="eu.baltrad.beast.adaptor.xmlrpc.XmlRpcConfigurationManager" autowire="byType"/>
  
  <!-- Add the xml adaptor to the baltrad adaptor -->
  <bean id="adaptormanager" class="eu.baltrad.beast.adaptor.BltAdaptorManager" autowire="byType">
    <property name="types">
      <list>
        <ref bean="xmlrpcadaptormanager"/>
      </list>
    </property>
  </bean>

  <!-- Create the router -->
  <bean id="groovymgr" class="eu.baltrad.beast.rules.groovy.GroovyRuleManager" autowire="byType"/>
  <bean id="bltcompositemgr" class="eu.baltrad.beast.rules.composite.CompositingRuleManager" autowire="byType"/>
  
  <bean id="router" class="eu.baltrad.beast.router.impl.BltRouter" autowire="byType">
    <property name="ruleManagers">
      <map>
        <entry key="groovy" value-ref="groovymgr"/>
        <entry key="blt_composite" value-ref="bltcompositemgr"/>
      </map>
    </property>
  </bean>
  
  <!-- Add the baltrad adaptor manager to the baltrad manager -->
  <bean id="bltmanager" class="eu.baltrad.beast.manager.BltMessageManager" autowire="byType"/>

  <!-- We need to have a timeout manager so that we can initiate timeout requests from anywhere -->
  <bean id="timeoutfactory" class="eu.baltrad.beast.rules.timer.TimeoutTaskFactory"/>  
  <bean id="timeoutmanager" class="eu.baltrad.beast.rules.timer.TimeoutManager" autowire="byType"/>

  <!-- and the file catalog -->
  <bean id="fc" class="eu.baltrad.fc.FileCatalog">
    <constructor-arg value="${database.uri}" />
    <constructor-arg value="${storage.dir}" />
  </bean>
    
  <!-- and the abstraction of the catalog -->
  <bean id="catalog" class="eu.baltrad.beast.db.Catalog" autowire="byType" />

  <!-- And we should have an application context to get hold of relevant managers -->
  <bean id="managercontext" class="eu.baltrad.beast.ManagerContext" autowire="byType" />
  
  <bean id="adaptorsController" class="eu.baltrad.beastui.web.controller.AdaptorsController" autowire="byType" />
  <bean id="routesController" class="eu.baltrad.beastui.web.controller.RoutesController" autowire="byType" /></beans>
</beans>