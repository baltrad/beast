<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx = "http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

  <!-- Property placeholder configurer for expanding ${} into values -->
  <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
      <list>
        <value>testdb.properties</value>
      </list>
    </property>
  </bean>
  
  <bean id="dataSource" destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource">
    <property name="driverClassName" value="${db.driver}"/>
    <property name="url" value="${db.url}"/>
    <property name="username" value="${db.user}"/>
    <property name="password" value="${db.pwd}"/>
  </bean>

  <bean id="jdbcTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
    <constructor-arg ref="dataSource"/>
  </bean>

  <!-- Enable transaction management -->
  <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
     <property name="dataSource" ref="dataSource"/>
  </bean>
  
  <!-- we want transactions on classes -->
  <tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/>
  
  <bean id="dataFactory" class="org.dbunit.ext.postgresql.PostgresqlDataTypeFactory"/>
  
  <bean id="testHelper" class="eu.baltrad.beast.itest.BeastDBTestHelper" autowire="byType">
    <property name="baltradDbUri" value="${blt.db.uri}"/>
    <property name="baltradDbPth" value="${blt.db.path}"/>
  </bean>  

  <!-- Some initialization that is necessary to wire the composite manager -->  
  <bean id="ruleutilities" class="eu.baltrad.beast.rules.util.RuleUtilities" autowire="byType" />
  <bean id="timeoutfactory" class="eu.baltrad.beast.rules.timer.TimeoutTaskFactory"/>  
  <bean id="timeoutmanager" class="eu.baltrad.beast.rules.timer.TimeoutManager" autowire="byType" />
  <bean id="fc" class="eu.baltrad.fc.FileCatalog">
  	<constructor-arg value="${blt.db.uri}" />
  	<constructor-arg value="${blt.db.path}" />
  </bean>  
  <bean id="catalog" class="eu.baltrad.beast.db.Catalog" autowire="byType" />

  <bean id="bltcompositemgr" class="eu.baltrad.beast.rules.composite.CompositingRuleManager" autowire="byType" />
  
  <bean id="router" class="eu.baltrad.beast.router.impl.BltRouter" autowire="byType">
    <property name="ruleManagers">
      <map>
        <entry key="blt_composite" value-ref="bltcompositemgr"/>
      </map>
    </property>
  </bean>
  
  <bean id="beastscheduler" class="eu.baltrad.beast.scheduler.BeastScheduler" autowire="byType"/>
  
</beans>